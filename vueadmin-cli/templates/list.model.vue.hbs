<template>
  <div class="gen-list-page">
    <el-card class="filter-card with-title">
      {{#compare operates 'includesAny' "[\"conditionSearch\",\"advancedSearch\"]"}}
      <div slot="header" class="clearfix">
        <div class="card-title">条件搜索</div>
      </div>
      <el-form :inline="true" :model="listQuery" @keyup.enter.native="getDataList()">
      {{#compare operates 'includes' 'conditionSearch'}}
{{#forOf attrs}}{{#compare ../chooseAttrs 'includes' k}}        <el-form-item :label="'{{attrName this}}'" prop="{{k}}" >
{{#switch v.UIType}}{{#case 'inputNumber'}}          <el-input-number v-model="listQuery.{{k}}" {{#if v.type.scal}}:precision="{{v.type.scale}}"{{/if}} clearable></el-input-number>
{{/case}}{{#case 'switch'}}          <el-switch v-model="listQuery.{{k}}"></el-switch>
{{/case}}{{#case 'radio'}}          <el-radio v-model="listQuery.{{k}}" label="值1"></el-radio>
{{/case}}{{#case 'slider'}}          <el-slider v-model="listQuery.{{k}}" label="值1"></el-slider>
{{/case}}{{#case 'remoteDict'}}            <dict-select dictCode="{{k}}" v-model="listQuery.{{k}}"></dict-select>
{{/case}}{{#case 'remoteSelect'}}            <keyword-search v-model="listQuery.{{k}}" :searchApi="list{{upperFirstRmId k}}" labelColumn="{{k}}" valueColumn="{{k}}" :allowEmpty="true"></keyword-search>
{{/case}}{{#case 'select'}}            <el-select v-model="listQuery.{{k}}">
          <el-option v-for="item in {{#compare v.refsTable '!==' undefined}}{{refsTable this}}sList{{/compare}}{{#compare v.refsTable '===' undefined}}[]{{/compare}}" :key="item.id" :label="item.{{refsProperty this}}" :value="item.id"></el-option>
        </el-select>
{{/case}}{{#case 'datePicker'}}          <el-date-picker v-model="listQuery.{{k}}" type="date" value-format="yyyy-MM-dd" clearable>
      </el-date-picker>
{{/case}}{{#case 'timePicker'}}          <el-time-select v-model="listQuery.{{k}}" type="time" :picker-options="{
          start: '08:30',
          step: '00:15',
          end: '18:30'
        }" clearable>
      </el-time-select>
{{/case}}{{#case 'datetimePicker'}}          <el-date-picker v-model="listQuery.{{k}}" type="datetime" value-format="yyyy-MM-dd HH:mm:ss" clearable>
      </el-date-picker>
{{/case}}{{#default}}          <el-input v-model="listQuery.{{k}}" clearable></el-input>
{{/default}}{{/switch}}        </el-form-item>

{{/compare}}{{/forOf}}  
      {{/compare}}     
        <div class='buttons with-complex'>
          {{#compare operates 'includes' 'advancedSearch'}}
            <complex-filter :config="complexFilterConfig"
            @confirm="doComplexSearch(1)"
            :type="dataButton==='complex' ? 'primary' : ''"
            class='complex-button'>高级搜索</complex-filter>
          {{/compare}}
          {{#compare operates 'includes' 'conditionSearch'}}
          <el-button @click="clearQuery()">清   空</el-button>
          <el-button @click="getDataList(1)" :type="dataButton==='list' ? 'primary' : ''" >搜   索</el-button>
          {{/compare}}
        </div>
      </el-form>
      {{/compare}}
    </el-card>
    <el-card class="with-title">
      <div slot="header" class="clearfix">
        <div class="card-title">{{modelCnName}}</div>
        <div class="buttons">
          <el-button v-if="isAuth('{{module}}:{{toLower modelName}}:create')" type="primary" @click="addOrUpdateHandle()">新增</el-button>
          {{#compare operates 'includes' 'import'}}
          <import-data v-if="isAuth('sys:coderule:create')"
                       :config="importConfig">
          </import-data>
          {{/compare}}
          {{#compare operates 'includes' 'export'}}
          <export-data v-if="isAuth('sys:coderule:create')"
                       :config="exportConfig">
          </export-data>
          {{/compare}}
          {{#compare operates 'includes' 'showField'}}
          <display-attributes :config='displayConfig'
                              type='primary'
                              plain
                              @confirm="doDataSearch()">显示字段</display-attributes>{{/compare}}
          <el-button v-if="isAuth('{{module}}:{{toLower modelName}}:delete')" type="danger" @click="deleteHandle()" :disabled="dataListSelections.length <= 0">批量删除</el-button>
        </div>
      </div>
      <el-table
        :data="dataList"
        v-loading="dataListLoading"
        @selection-change="selectionChangeHandle"
        {{#compare orderAttrs 'length !== 0' undefined}}
        @sort-change="sortChangeHandle"
        {{/compare}}
        style="width: 100%;">
        <el-table-column
          type="selection"
          header-align="left"
          align="left"
          width="50">
        </el-table-column>
{{#forOf attrs model=modelName}}{{#compare ../selectedAttrs 'includes' k}}{{#switch v.type.typeId}}{{#case 'boolean'}}
        <el-table-column align="center" prop="{{k}}" {{#compare  ../orderAttrs 'includes' k}}sortable='custom' {{/compare}}label="{{attrName this}}" {{#compare ../operates 'includes' 'showField'}}v-if="displayAttributesMap['{{model}}.{{k}}'].display"{{/compare}}>
          <template slot-scope="scope">
            <el-switch v-model="scope.row.{{k}}" :disabled="true"></el-switch>
          </template>
        </el-table-column>
{{/case}}{{#case 'date'}}
        <el-table-column align="center" prop="{{k}}" {{#compare  ../orderAttrs 'includes' k}}sortable='custom' {{/compare}}label="{{attrName this}}" {{#compare ../operates 'includes' 'showField'}}v-if="displayAttributesMap['{{model}}.{{k}}'].display"{{/compare}}>
          <template slot-scope="scope">
            <span>\{{scope.row.{{k}} | format('YYYY-MM-DD')}}</span>
          </template>
        </el-table-column>
{{/case}}{{#case 'dateOnly'}}
        <el-table-column align="center" prop="{{k}}" {{#compare  ../orderAttrs 'includes' k}}sortable='custom' {{/compare}}label="{{attrName this}}" {{#compare ../operates 'includes' 'showField'}}v-if="displayAttributesMap['{{model}}.{{k}}'].display"{{/compare}}>
          <template slot-scope="scope">
            <span>\{{scope.row.{{k}} }}</span>
          </template>
        </el-table-column>
{{/case}}{{#case 'json'}}
        <el-table-column align="center" prop="{{k}}" {{#compare  ../orderAttrs 'includes' k}}sortable='custom' {{/compare}}label="{{attrName this}}" {{#compare ../operates 'includes' 'showField'}}v-if="displayAttributesMap['{{model}}.{{k}}'].display"{{/compare}}>
          <template slot-scope="scope">
            <span>Json字段</span>
          </template>
        </el-table-column>
{{/case}}{{#default}}
        <el-table-column align="center" prop="{{k}}" {{#compare  ../orderAttrs 'includes' k}}sortable='custom' {{/compare}}label="{{attrName this}}" {{#compare ../operates 'includes' 'showField'}}v-if="displayAttributesMap['{{model}}.{{k}}'].display"{{/compare}}>
          <template slot-scope="scope">
            <span>\{{scope.row.{{k}} }}</span>
          </template>
        </el-table-column>
{{/default}}{{/switch}}{{/compare}}{{/forOf}}{{#compare selectedAttrs 'includes' 'createdAt'}}
        <el-table-column align="center" label="创建时间" {{#compare operates 'includes' 'showField'}}v-if="displayAttributesMap['{{modelName}}.createdAt'].display"{{/compare}}>
          <template slot-scope="scope">
            <span>\{{scope.row.createdAt | format('YYYY-MM-DD')}}</span>
          </template>
        </el-table-column>
{{/compare}}{{#compare selectedAttrs 'includes' 'updatedAt'}}
        <el-table-column align="center" label="修改时间" {{#compare operates 'includes' 'showField'}}v-if="displayAttributesMap['{{modelName}}.updatedAt'].display"{{/compare}}>
          <template slot-scope="scope">
            <span>\{{scope.row.updatedAt | format('YYYY-MM-DD')}}</span>
          </template>
        </el-table-column>
{{/compare}}

{{#compare operates 'includesAny' "[\"update\",\"delete\"]"}}      <el-table-column align="center" :label="'操作'" width="230" class-name="small-padding fixed-width">
          <template slot-scope="scope">{{#compare operates 'includes' 'update'}}
            <el-button v-if="isAuth('{{module}}:{{toLower modelName}}:update')" type="text" size="small" @click="addOrUpdateHandle(scope.row.id)">修改</el-button>{{/compare}}{{#compare operates 'includes' 'delete'}}
            <el-button v-if="isAuth('{{module}}:{{toLower modelName}}:delete')" size="mini" type="text" @click="deleteHandle(scope.row)">删除</el-button>{{/compare}}
          </template>
        </el-table-column>{{/compare}}

      </el-table>
      <el-pagination
        @size-change="sizeChangeHandle"
        @current-change="currentChangeHandle"
        :current-page="pageNo"
        :page-sizes="[10, 20, 50, 100]"
        :page-size="pageSize"
        :total="total"
        layout="total, sizes, prev, pager, next, jumper">
      </el-pagination>

    </el-card>
  </div>
</template>

<script>
import { list{{upperFirst modelName}}, delete{{upperFirst modelName}}{{#compare operates 'includesAny' "[\"advancedSearch\", \"showField\"]"}}, {{modelName}}AdvancedSearch{{/compare}}{{#compare operates 'includes' 'import'}}, import{{upperFirst modelName}}{{/compare}}{{#compare operates 'includes' 'export'}}, export{{upperFirst modelName}}{{/compare}} } from '@/api/{{modelName}}'
{{#forOf attrs}}
{{#compare v.UIType '===' 'remoteSelect'}}
import { list{{upperFirstRmId k}} } from '@/api/{{k}}' // 如果没有对应api请自行修改
{{/compare}}
{{#compare v.UIType '===' 'select'}}
{{#compare v.refsTable '!==' undefined}}
import { list{{upperFirst v.refsTable}} } from '@/api/{{refsTable this}}'
{{/compare}}
{{/compare}}
{{/forOf}}
{{#compare operates 'includes' 'advancedSearch'}}
import ComplexFilter from '@/components/complex-filter'
{{/compare}}
{{#compare operates 'includes' 'showField'}}
import DisplayAttributes from '@/components/display-attributes'
{{/compare}}
{{#compare operates 'includes' 'import'}}
import ImportData from '@/components/import-data'
{{/compare}}
{{#compare operates 'includes' 'export'}}
import ExportData from '@/components/export-data'
{{/compare}}
{{#compare operates 'includesAny' "[\"advancedSearch\", \"showField\", \"import\", \"export\"]"}}
import { filterAttributes } from '@/utils'
{{/compare}}
{{#compare operates 'includesAny' "[\"advancedSearch\", \"showField\"]"}}
import { {{#compare operates 'includes' 'showField'}}keyBy,{{/compare}} cloneDeep } from 'lodash'
const defaultDisplay = [
{{#forOf selectedAttrs model=modelName}}
  '{{model}}.{{v}}',
{{/forOf}}
].map(a => {
  return { code: a, display: true }
})
{{/compare}}
export default {
  name: '{{modelName}}List',
  {{#compare operates 'includesAny' "[\"advancedSearch\", \"showField\", \"import\", \"export\"]"}}
  components: {
    {{#compare operates 'includes' 'advancedSearch'}}
    ComplexFilter,
    {{/compare}}
    {{#compare operates 'includes' 'showField'}}
    DisplayAttributes,
    {{/compare}}
    {{#compare operates 'includes' 'import'}}
    ImportData,
    {{/compare}}
    {{#compare operates 'includes' 'export'}}
    ExportData,
    {{/compare}}
  },
  {{/compare}}
  data () {
    return {
      dataButton: 'list',
      listQuery: {
{{#forOf attrs}}{{#compare ../chooseAttrs 'includes' k}}        {{k}}: null,
{{/compare}}{{/forOf}}     },
{{#forOf attrs}}{{#compare v.UIType '===' 'select'}}{{#compare v.refsTable '!==' undefined}}
      {{refsTable this}}sList: null,{{/compare}}{{/compare}}
      {{#compare v.UIType '===' 'remoteSelect'}}list{{upperFirstRmId k}},{{/compare}}{{/forOf}} 
      dataList: [],
      pageNo: 1,
      pageSize: 10,
      total: 0,
      dataListLoading: false,
      dataListSelections: [],
      attributes: [{
        code: '{{modelName}}',
        name: '{{modelCnName}}',
        children: [
          {{#forOf attrs}}
          { code: '{{k}}', name: '{{v.cnName}}', type: 'string', required: true },
          {{/forOf}}
          {{#compare selectedAttrs 'includes' 'createdAt'}}
          { code: 'createdAt', name: '创建时间', type: 'string', required: true },
          {{/compare}}
          {{#compare selectedAttrs 'includes' 'updatedAt'}}
          { code: 'updatedAt', name: '修改时间', type: 'string', required: true },
          {{/compare}}
        ]
      }],
      complexFilters: [],
      {{#compare operates 'includes' 'export'}}
      exportAttributes: [
        {{#forOf attrs model=modelName}}
        {{#compare k '!==' 'id'}}
        '{{model}}.{{k}}',
        {{/compare}}
        {{/forOf}}
      ],
      {{/compare}}
      {{#compare operates 'includesAny' "[\"advancedSearch\", \"showField\"]"}}
      displayAttributes: 
        cloneDeep(this.$store.getters.displaySetting.staff) || defaultDisplay,
      {{/compare}}
      {{#compare operates 'includes' 'import'}}
      importAttributes: [
        {{#forOf attrs model=modelName}}
        {{#compare k '!==' 'id'}}
        '{{model}}.{{k}}',
        {{/compare}}
        {{/forOf}}
      ],
      {{/compare}}
      {{#compare v.UIType '===' 'remoteSelect'}}
      list{{upperFirst k}},
      {{/compare}}
    }
  },
  {{#compare operates 'includesAny' "[\"advancedSearch\", \"showField\", \"import\", \"export\"]"}}
  computed: {
    {{#compare operates 'includes' 'advancedSearch'}}
    complexFilterConfig () {
      return {
        attributes: filterAttributes(this.attributes, 'isComplexFilter'),
        complexFilters: this.complexFilters
      }
    },
    {{/compare}}
    {{#compare operates 'includes' 'showField'}}
    displayConfig () {
      return {
        attributes: filterAttributes(this.attributes, 'isDisplay'),
        displayAttributes: this.displayAttributes,
        saveSetting: () => {
          this.$store.dispatch('user/SetADisplay', {
            page: '{{modelName}}',
            display: this.displayAttributes
          })
          this.$message({
            message: '设置成功',
            type: 'success',
            duration: 1000
          })
        },
        reset: () => {
          this.displayAttributes = cloneDeep(defaultDisplay)
          this.$store.dispatch('user/SetADisplay', {
            page: '{{modelName}}',
            display: this.displayAttributes
          })
          this.$message({
            message: '设置成功',
            type: 'success',
            duration: 1000
          })
        }
      }
    },
    displayAttributesMap () {
      return keyBy(this.displayAttributes, 'code')
    },
    {{/compare}}
    {{#compare operates 'includes' 'import'}}
    importConfig () {
      return {
        attributes: [{
          code: this.attributes[0].code,
          name: this.attributes[0].name,
          children: filterAttributes(this.attributes, {
            attributes: this.importAttributes,
            plain: true
          })
        }],
        importApi: import{{upperFirst modelName}},
        importSuccessCb: () => { this.getDataList() }
      }
    },
    {{/compare}}
    {{#compare operates 'includes' 'export'}}
    exportConfig () {
      return {
        attributes: filterAttributes(this.attributes, 'isExport'),
        exportApi: export{{upperFirst modelName}},
        filterType: this.dataButton,
        filters: this.listQuery,
        complexFilters: this.complexFilters,
        exportAttributes: this.exportAttributes
      }
    },
    {{/compare}}
  },
  {{/compare}}
  activated () {
    const self = this;
    self.getDataList()
  {{#forOf attrs}}{{#compare v.UIType '===' 'select'}}{{#compare v.refsTable '!==' undefined}}
    list{{upperFirst v.refsTable}}().then(({data}) => {
      self.{{refsTable this}}sList = data
    })
  {{/compare}}
  {{/compare}}
  {{/forOf}}
  },
  methods: {
    // 普通查询
    getDataList (pageNo) {
      if (pageNo) {
        this.pageNo = pageNo
      }
      this.dataButton = 'list'
      this.dataListLoading = true
      list{{upperFirst modelName}}(Object.assign(
        {
          page: this.pageNo,
          limit: this.pageSize,
          {{#compare orderAttrs 'length !== 0' undefined}}
          prop: this.prop,
          order: this.order
          {{/compare}}
        },
        this.listQuery
      )).then(({data, total}) => {
        this.dataList = data
        this.total = total
      }).catch(() => {
        this.dataList = []
        this.total = 0
      }).finally(() => {
        this.dataListLoading = false
      })
    },
    {{#compare operates 'includesAny' "[\"advancedSearch\", \"showField\"]"}}
    doComplexSearch (pageIndex) {
      if (pageIndex) {
        this.pageIndex = pageIndex
      }
      this.dataButton = 'complex'
      this.dataListLoading = true
      {{modelName}}AdvancedSearch({
        filters: this.complexFilters,
        displayAttributes: this.displayAttributes,
        code: '007',
        page: this.pageIndex,
        limit: this.pageSize,
        prop: this.prop,
        order: this.order
      }).then(({ data, total }) => {
        if (data) {
          this.dataList = data
          this.totalPage = total
        } else {
          this.dataList = []
          this.totalPage = 0
        }
        this.dataListLoading = false
      })
    },
    {{/compare}}
    // 清除查询条件
    clearQuery () {
      this.listQuery = Object.assign(this.listQuery, {
{{#forOf attrs}}{{#compare ../chooseAttrs 'includes' k}}{{#compare k '!=' 'id'}}        {{k}}: null,
{{/compare}}{{/compare}}{{/forOf}}      })
    },
    // 每页数
    sizeChangeHandle (val) {
      this.pageSize = val
      this.pageNo = 1
      this.doDataSearch()
    },
    // 当前页
    currentChangeHandle (val) {
      this.pageNo = val
      this.doDataSearch()
    },
    // 查询数据
    doDataSearch () {
      if (this.dataButton === 'complex') {
        this.doComplexSearch()
      } else {
        this.getDataList()
      }
    },
    // 多选
    selectionChangeHandle (val) {
      this.dataListSelections = val
    },
    // 新增 / 修改
    addOrUpdateHandle (id) {
      this.$nextTick(() => {
        this.$router.push({ path: id ? `/edit-{{toLower modelName}}/${id}` : '/add-{{toLower modelName}}' })
      })
    },
    // 删除数据
    deleteHandle (row) {
      var ids = row ? row.id : this.dataListSelections.map(item => {
        return item.id
      })
      this.$confirm('此操作将删除数据, 是否继续?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(() => {
        delete{{upperFirst modelName}}(ids).then(() => {
          this.$notify({
            title: '成功',
            message: '删除成功',
            type: 'success',
            duration: 2000
          })
          this.getDataList()
        })
      })
    },
    {{#compare orderAttrs 'length !== 0' undefined}}
    // 排序
    sortChangeHandle (column) {
      switch (column.order) {
        case 'ascending':
          this.order = 'asc'
          break
        case 'descending':
          this.order = 'desc'
          break
        default: this.order = ''
      }
      this.prop = column.prop
      this.doDataSearch()
    }
    {{/compare}}
  }
}
</script>
